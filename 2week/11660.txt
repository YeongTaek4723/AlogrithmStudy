2차원 배열의 표안에 값이 주어지고 정해지는 구간의 범위의 합을 구하는 문제로 
표의 크기가 1 <= N <= 1024 이므로 하나하나 다 더해서 구한다면 꽤나 오래 걸린다. 
이때 ,다이나믹 프로그래밍 알고리즘을 이용하여 지정한 구간의 배열의 값의 합을 구하면 보다 빠르게 구할 수 있다.


1) 표의 크기 N과 합을 구하는 횟수 M을 입력받는다.
2) 반복문을 이용해서 arr배열과 dp배열을 채운다.
2-1)dp[i][j] = dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1] + arr[i][j]
    dp배열에 (i, j)의 값은 (i -1, j)의 합과 (i, j -1)의 합을 더한 뒤 
    중복되어 합해진 (i - 1, j -1)의 값을 빼주면 된다.
3) for문을 이용해 구간을 정할 좌표 4개를 입력 받는다.
3-1) sum = dp[x2][y2] - dp[x1 - 1][y2] - dp[x2][y1 - 1] + dp[x1 - 1][y1 - 1]; 
    구간 합의 경우 예를 들어 입력값 2 2 3 4 , (2, 2) ~ (3, 4)까지의 합을 구하는 경우 
    (3, 4)의 구간 합에 (1, 4)의 구간 합과 (3, 1)의 구간 합을 뺀뒤
    중복되어 뺀 (1, 1)구간 합을 더하면 된다.
