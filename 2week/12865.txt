가방의 무게와 가치를 배열에 담아 배낭에 넣을 수 있는 물건의 가치의 최대값을 구하는 것으로 
다이나믹 프로그래밍 알고리즘을 이용해 최대값을 구하면 된다. 



1) 품품의 수 N, 버틸 수 있는 무게 K를 입력받고, for문을 통해 w배열과 v배열에 각각의 무게와 가치를 입력 한다.
2) 반복문을 통해서 만약 j(무게)가 w[i](해당 물품의 무게)보다 크다면 
2-1) dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - w[i]] + v[i])
    max로 i-1의 값(이전 값)과 i-1에서 j에 w[i]의 값을 뺸곳의 값과 비교해 더 큰 값을 대입 
    ex) i = 3, j = 7 일때, dp[3][7] = max(dp[3 - 1][7], dp[3 - 1][7 - w[3]]+ v[3])
                           - dp[3][7] = max(13, dp[2][7 - 3] + 6)
                           -  dp[3][7] = max(13, 8 + 6)로 14가 13보다 크기에 dp[3][7]에는 이전 값인 13이 아니라 14가 들어간다.
2-2) 물건이 들어갈 수 없는 상황 즉, j가 w[i]보다 작다면 이전 값을 그대로 가져와 대입한다.                          














