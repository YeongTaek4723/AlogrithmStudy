계단을 오르는 규칙을 이용해 마지막 계단에 도달했을 때 얻을 수 있는 최대값을 구하는 문제로 
규칙과 다이나믹 프로그래밍 알고리즘을 이용하여 배열에 각 계단을 규칙에 따라 오를때
얻는 점수를 저장하여 최대값을 구한다. 

1)계단의 갯수 N을 입력 받고 for문을 이용해 배열에 각 계단의 점수를 입력 받는다. 
2)dp[1]은 첫 계단을 오를경우의 점수로 arr[1]의 값을 준다
  dp[2]는 첫 계단과 두번째 계단을 오르는 경우로 arr[1] + arr[2]의 값을 준다.
  dp[3]부터가 여러개의 경우가 생기는데 
  '첫번째 계단과 세번째 계단을 오르는 경우'와 '두번째 계단과 세번째 계단을 오르는 경우' 이다.
  그렇기에 max를 이용해 첫번째 계단과 두번째 계단을 비교해 가장 큰값을 세번째 계단과 더해 dp[3]에 넣는다.
3) 그 다음은 4 ~ N번째 계단의 경우 인데 반복문과 아까 dp[3]의 값을 구할때를 생각해 값을 넣을 수 있다.
3-1)예시로 i의 값을 4라고 생각한다면 4번째 계단을 오르는 경우는 
    '1 ~ 2 번째 계단을 오르고 4번째 계단으로 오르는 경우'와 '1 계단을 오르고 3 ~ 4번째 계단을 오르는 경우'이다.
    그렇기에 max에 dp[i - 2](1 ~ 2 번째 계단을 오른 값)와 dp[i - 3] + arr[i - 1](1 계단을 오르고 3번째 계단까지 오른 값) 중
    가장 큰값을 고른 뒤 4번째 계단의 점수를 더해 dp[4]에 넣으면 된다.
3-2) 3-1의 방식을 이용해 마지막 계단인 N번째 계단을 오른 뒤 최대값을 출력하면 된다. 